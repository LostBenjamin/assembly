#!/bin/bash

TOP_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && cd .. && pwd )"

SERVER_URL=$ARAST_URL
SERVER_QUEUE=$ARAST_QUEUE
LIB_DIR=$ARAST_LIB_DIR
VAR_DIR=$ARAST_VAR_DIR
BIN_DIR=$ARAST_BIN_DIR
DATA_DIR=$ARAST_DATA_DIR
THREADS=$ARAST_WORKER_THREADS

LIB_DIR=${LIB_DIR:-$TOP_DIR/lib}
VAR_DIR=${VAR_DIR:-$TOP_DIR/deployment/var}

LIB_DIR=$LIB_DIR/assembly
LOG_DIR=$VAR_DIR/log

COMPUTE_CONFIG=$LIB_DIR/ar_compute.conf


mkdir -p $LOG_DIR

ARG_URL=$(     [[ -z "$SERVER_URL"   ]] && echo "" || echo "--server $SERVER_URL")
ARG_QUEUE=$(   [[ -z "$SERVER_QUEUE" ]] && echo "" || echo "--queue $SERVER_QUEUE")
ARG_BIN=$(     [[ -z "$BIN_DIR"      ]] && echo "" || echo "--compute-bin $BIN_DIR")
ARG_DATA=$(    [[ -z "$DATA_DIR"     ]] && echo "" || echo "--compute-data $DATA_DIR")
ARG_THREADS=$( [[ -z "$THREADS"      ]] && echo "" || echo "--threads $THREADS")

args=( --config $COMPUTE_CONFIG
       $ARG_URL $ARG_QUEUE
       $ARG_BIN $ARG_DATA
       $ARG_THREADS )

nohup $LIB_DIR/ar_computed.py "${args[@]}" >> $LOG_DIR/ar_compute.log 2>&1 &
echo $! >$VAR_DIR/ar_compute.pid
pid=$(cat $VAR_DIR/ar_compute.pid)
cmd="$LIB_DIR/ar_computed.py ${args[@]} >> $LOG_DIR/ar_compute.log 2>&1 &"

sleep 2
if [[ -z $(ps -f -p $pid | grep ar_computed) ]]; then
    echo "ERROR: ARAST compute server failed to start."
    echo "Command: $cmd"
    exit 1
else
    echo "ARAST compute server started: pid = $pid"
    echo "Command: $cmd"
    echo
fi

